parameters:
- description: The name of the Elasticsearch deployment.
  displayName: Elasticsearch Deployment Name
  name: ELASTIC_DEPLOY_NAME
  required: true
  value: elasticsearch
- description: The Elasticsearch image to use
  displayName: Image
  name: IMAGE
  required: true
  value: "registry.centos.org/rhsyseng/elasticsearch:latest"
- description: The Service Account for pre-deploy setting
  displayName: Service Account
  name: PRIV_SA
  required: true
  value: "privilegeduser"  
- description: Limit of memory for java.
  displayName: Memory
  name: ELASTIC_MEMORY
  required: true
  value: 512Mi

apiVersion: v1
kind: Template
labels:
  app: elasticsearch
  template: elasticsearch-template
metadata:
  name: elasticsearch-template
  annotations:
    openshift.io/display-name: Elasticsearch
    description: |-
       Elasticsearch is a distributed, RESTful search and analytics engine.
       
       WARNING: Service Account have to permissions for run privileged containers.
    openshift.io/long-description: |
       Elasticsearch is a distributed, RESTful search and analytics engine capable of solving a growing number of use cases.
       As the heart of the Elastic Stack, it centrally stores your data so you can discover the expected and uncover the unexpected.
    iconClass: icon-elastic
    tags: elasticsearch
  labels:
    app: elasticsearch
objects:
- apiVersion: apps/v1beta1
  kind: StatefulSet
  metadata:
    name: ${ELASTIC_DEPLOY_NAME}
    labels:
      app: elasticsearch
  spec:
    serviceName: ${ELASTIC_DEPLOY_NAME}
    replicas: 1
    selector:
      matchLabels:
        app: elasticsearch
    template:
      metadata:
        labels:
          app: elasticsearch
      spec:
        serviceAccountName: ${PRIV_SA}
        initContainers:
          - name: init-sysctl
            image: busybox
            imagePullPolicy: IfNotPresent
            command:
              - "sysctl"
              - "-w"
              - "vm.max_map_count=262144"
            securityContext:
              privileged: true			  
        containers:
        - env:
          - name: SERVICE
            value: elasticsearch
          - name: LOG_LEVEL
            value: info
          image: ${IMAGE}
          imagePullPolicy: Always
          name: ${ELASTIC_DEPLOY_NAME}
          livenessProbe:
            httpGet:
              path: /_cluster/health
              port: 9200
              scheme: HTTP
          ports:
          - containerPort: 9200
            name: elasticsearch
            protocol: TCP
          - containerPort: 9300
            name: transport
            protocol: TCP
          resources:
            limits:
              memory: ${ELASTIC_MEMORY}
            requests:
              memory: ${ELASTIC_MEMORY}
          volumeMounts:
          - mountPath: /elasticsearch/persistent
            name: elasticsearch-persistent
        securityContext: {}
        volumes:
        - emptyDir: {}
          name: elasticsearch-persistent
- apiVersion: v1
  kind: Service
  metadata:
    name: elasticsearch
    labels:
      app: jaeger
      jaeger-infra: elasticsearch-service
  spec:
    clusterIP: None
    selector:
      app: elasticsearch
    ports:
    - port: 9200
      name: elasticsearch
    - port: 9300
      name: transport